{
  "ast": null,
  "code": "\"use strict\";\n\nvar _s = $RefreshSig$();\nvar _interopRequireWildcard3 = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports.default = exports.emitter = exports.router = exports.version = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"@babel/runtime/helpers/interopRequireWildcard\"));\nrequire(\"@next/polyfill-module\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _headManagerContext = require(\"../next-server/lib/head-manager-context\");\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\nvar _routerContext = require(\"../next-server/lib/router-context\");\nvar _router = require(\"../next-server/lib/router/router\");\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\nvar querystring = _interopRequireWildcard3(require(\"../next-server/lib/router/utils/querystring\"));\nvar envConfig = _interopRequireWildcard3(require(\"../next-server/lib/runtime-config\"));\nvar _utils = require(\"../next-server/lib/utils\");\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\nvar _pageLoader = _interopRequireWildcard3(require(\"./page-loader\"));\nvar _performanceRelayer = _interopRequireDefault(require(\"./performance-relayer\"));\nvar _router2 = require(\"./router\"); /* global location */\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nconst version = \"9.5.5\";\nexports.version = version;\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  head: initialHeadData,\n  locales,\n  defaultLocale\n} = data;\nlet {\n  locale\n} = data;\nconst prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/`; //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {}\n});\nlet asPath = (0, _utils.getURL)(); // make sure not to attempt stripping basePath for 404s\nif ((0, _router.hasBasePath)(asPath)) {\n  asPath = (0, _router.delBasePath)(asPath);\n}\nasPath = (0, _router.delLocale)(asPath, locale);\nif (process.env.__NEXT_i18n_SUPPORT) {\n  const {\n    normalizeLocalePath\n  } = require('../next-server/lib/i18n/normalize-locale-path');\n  if (isFallback && locales) {\n    const localePathResult = normalizeLocalePath(asPath, locales);\n    if (localePathResult.detectedLocale) {\n      asPath = asPath.substr(localePathResult.detectedLocale.length + 1);\n      locale = localePathResult.detectedLocale;\n    }\n  }\n}\nconst pageLoader = new _pageLoader.default(buildId, prefix, page);\nconst register = ([r, f]) => pageLoader.registerPage(r, f);\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map(p => setTimeout(() => register(p), 0));\n}\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nconst headManager = (0, _headManager.default)(initialHeadData);\nconst appElement = document.getElementById('__next');\nlet lastAppProps;\nlet lastRenderReject;\nlet webpackHMR;\nlet router;\nexports.router = router;\nlet CachedComponent;\nlet cachedStyleSheets;\nlet CachedApp, onPerfEntry;\nclass Container extends _react.default.Component {\n  componentDidCatch(componentErr, info) {\n    this.props.fn(componentErr, info);\n  }\n  componentDidMount() {\n    this.scrollToHash(); // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (router.isSsr && (isFallback || data.nextExport && ((0, _isDynamic.isDynamicRoute)(router.pathname) || location.search) || hydrateProps && hydrateProps.__N_SSG && location.search)) {\n      // update query on mount for exported pages\n      router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), asPath, {\n        // @ts-ignore\n        // WARNING: `_h` is an internal option for handing Next.js\n        // client-side hydration. Your app should _never_ use this property.\n        // It may change at any time without notice.\n        _h: 1,\n        // Fallback pages must trigger the data fetch, so the transition is\n        // not shallow.\n        // Other pages (strictly updating query) happens shallowly, as data\n        // requirements would already be present.\n        shallow: !isFallback\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.scrollToHash();\n  }\n  scrollToHash() {\n    let {\n      hash\n    } = location;\n    hash = hash && hash.substring(1);\n    if (!hash) return;\n    const el = document.getElementById(hash);\n    if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0);\n  }\n  render() {\n    if (false) {\n      return this.props.children;\n    } else {\n      const {\n        ReactDevOverlay\n      } = require('@next/react-dev-overlay/lib/client');\n      return /*#__PURE__*/_react.default.createElement(ReactDevOverlay, null, this.props.children);\n    }\n  }\n}\nconst emitter = (0, _mitt.default)();\nexports.emitter = emitter;\nvar _default = async (opts = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (true) {\n    webpackHMR = opts.webpackHMR;\n  }\n  const {\n    page: app,\n    mod\n  } = await pageLoader.loadPage('/_app');\n  CachedApp = app;\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n      let perfStartEntry;\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime;\n      }\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label: entryType === 'mark' || entryType === 'measure' ? 'custom' : 'web-vital'\n      });\n    };\n  }\n  let initialErr = hydrateErr;\n  try {\n    ;\n    ({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets\n    } = await pageLoader.loadPage(page));\n    if (true) {\n      const {\n        isValidElementType\n      } = require('react-is');\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(`The default export is not a React Component in page: \"${page}\"`);\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error;\n  }\n  if (true) {\n    const {\n      getNodeError\n    } = require('@next/react-dev-overlay/lib/client'); // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error;\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr.message);\n          } catch (e) {\n            error = e;\n          }\n          error.name = initialErr.name;\n          error.stack = initialErr.stack;\n          const node = getNodeError(error);\n          throw node;\n        });\n      } // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr;\n        });\n      }\n    }\n  }\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds);\n  }\n  exports.router = router = (0, _router2.createRouter)(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: ({\n      Component,\n      styleSheets,\n      props,\n      err\n    }, App) => render({\n      App,\n      Component,\n      styleSheets,\n      props,\n      err\n    }),\n    locale,\n    locales,\n    defaultLocale\n  }); // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-init-client!'))).then(initClientModule => {\n      return initClientModule.default({\n        router\n      });\n    }).catch(initClientErr => {\n      console.error('Error calling client-init for plugins', initClientErr);\n    });\n  }\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr\n  };\n  if (false) {\n    render(renderCtx);\n    return emitter;\n  } else {\n    return {\n      emitter,\n      render,\n      renderCtx\n    };\n  }\n};\nexports.default = _default;\nasync function render(renderingProps) {\n  if (renderingProps.err) {\n    await renderError(renderingProps);\n    return;\n  }\n  try {\n    await doRender(renderingProps);\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr;\n    }\n    if (true) {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr;\n      });\n    }\n    await renderError((0, _extends2.default)({}, renderingProps, {\n      err: renderErr\n    }));\n  }\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nfunction renderError(renderErrorProps) {\n  const {\n    App,\n    err\n  } = renderErrorProps; // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (true) {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError(); // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: []\n    });\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-error-client!'))).then(onClientErrorModule => {\n      return onClientErrorModule.default({\n        err\n      });\n    }).catch(onClientErrorErr => {\n      console.error('error calling on-error-client for plugins', onClientErrorErr);\n    });\n  } // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err);\n  return pageLoader.loadPage('/_error').then(({\n    page: ErrorComponent,\n    styleSheets\n  }) => {\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    const AppTree = wrapApp(App);\n    const appCtx = {\n      Component: ErrorComponent,\n      AppTree,\n      router,\n      ctx: {\n        err,\n        pathname: page,\n        query,\n        asPath,\n        AppTree\n      }\n    };\n    return Promise.resolve(renderErrorProps.props ? renderErrorProps.props : (0, _utils.loadGetInitialProps)(App, appCtx)).then(initProps => doRender((0, _extends2.default)({}, renderErrorProps, {\n      err,\n      Component: ErrorComponent,\n      styleSheets,\n      props: initProps\n    })));\n  });\n} // If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof _reactDom.default.hydrate === 'function';\nlet reactRoot = null;\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = {\n        hydrate: true\n      };\n      reactRoot = process.env.__NEXT_REACT_MODE === 'concurrent' ? _reactDom.default.unstable_createRoot(domEl, opts) : _reactDom.default.unstable_createBlockingRoot(domEl, opts);\n    }\n    reactRoot.render(reactEl);\n  } else {\n    // mark start of hydrate/render\n    if (_utils.ST) {\n      performance.mark('beforeRender');\n    } // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      _reactDom.default.hydrate(reactEl, domEl, markHydrateComplete);\n      isInitialRender = false;\n      if (onPerfEntry && _utils.ST) {\n        (0, _performanceRelayer.default)(onPerfEntry);\n      }\n    } else {\n      _reactDom.default.render(reactEl, domEl, markRenderComplete);\n    }\n  }\n}\nfunction markHydrateComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterHydrate'); // mark end of hydration\n  performance.measure('Next.js-before-hydration', 'navigationStart', 'beforeRender');\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate');\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry);\n  }\n  clearMarks();\n}\nfunction markRenderComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterRender'); // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark');\n  if (!navStartEntries.length) {\n    return;\n  }\n  performance.measure('Next.js-route-change-to-render', navStartEntries[0].name, 'beforeRender');\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender');\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry);\n    performance.getEntriesByName('Next.js-route-change-to-render').forEach(onPerfEntry);\n  }\n  clearMarks();\n  ['Next.js-route-change-to-render', 'Next.js-render'].forEach(measure => performance.clearMeasures(measure));\n}\nfunction clearMarks() {\n  ;\n  ['beforeRender', 'afterHydrate', 'afterRender', 'routeChange'].forEach(mark => performance.clearMarks(mark));\n}\nfunction AppContainer({\n  children\n}) {\n  return /*#__PURE__*/_react.default.createElement(Container, {\n    fn: error => renderError({\n      App: CachedApp,\n      err: error\n    }).catch(err => console.error('Error rendering page: ', err))\n  }, /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: (0, _router2.makePublicRouterInstance)(router)\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: headManager\n  }, children)));\n}\n_c = AppContainer;\nconst wrapApp = App => wrappedAppProps => {\n  const appProps = (0, _extends2.default)({}, wrappedAppProps, {\n    Component: CachedComponent,\n    err: hydrateErr,\n    router\n  });\n  return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps));\n};\nfunction doRender({\n  App,\n  Component,\n  props,\n  err,\n  styleSheets\n}) {\n  Component = Component || lastAppProps.Component;\n  props = props || lastAppProps.props;\n  const appProps = (0, _extends2.default)({}, props, {\n    Component,\n    err,\n    router\n  }); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps;\n  let canceled = false;\n  let resolvePromise;\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject();\n    }\n    resolvePromise = () => {\n      lastRenderReject = null;\n      resolve();\n    };\n    lastRenderReject = () => {\n      canceled = true;\n      lastRenderReject = null;\n      const error = new Error('Cancel rendering route');\n      error.cancelled = true;\n      reject(error);\n    };\n  }); // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart() {\n    if (\n    // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles.\n    isInitialRender || // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    true) {\n      return false;\n    }\n    const currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n    const currentHrefs = new Set(currentStyleTags.map(tag => tag.getAttribute('data-n-href')));\n    styleSheets.forEach(({\n      href,\n      text\n    }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style');\n        styleTag.setAttribute('data-n-href', href);\n        styleTag.setAttribute('media', 'x');\n        document.head.appendChild(styleTag);\n        styleTag.appendChild(document.createTextNode(text));\n      }\n    });\n    return true;\n  }\n  function onCommit() {\n    if (\n    // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    false &&\n    // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles:\n    !isInitialRender &&\n    // Ensure this render was not canceled\n    !canceled) {\n      const desiredHrefs = new Set(styleSheets.map(s => s.href));\n      const currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n      const currentHrefs = currentStyleTags.map(tag => tag.getAttribute('data-n-href')); // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media');\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x');\n        }\n      } // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]');\n      if (\n      // This should be an invariant:\n      referenceNode) {\n        styleSheets.forEach(({\n          href\n        }) => {\n          const targetTag = document.querySelector(`style[data-n-href=\"${href}\"]`);\n          if (\n          // This should be an invariant:\n          targetTag) {\n            referenceNode.parentNode.insertBefore(targetTag, referenceNode.nextSibling);\n            referenceNode = targetTag;\n          }\n        });\n      } // Finally, clean up server rendered stylesheets:\n      (0, _pageLoader.looseToArray)(document.querySelectorAll('link[data-n-p]')).forEach(el => {\n        el.parentNode.removeChild(el);\n      }); // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height');\n    }\n    resolvePromise();\n  }\n  const elem = /*#__PURE__*/_react.default.createElement(Root, {\n    callback: onCommit\n  }, /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps)));\n  onStart(); // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(process.env.__NEXT_STRICT_MODE ? /*#__PURE__*/_react.default.createElement(_react.default.StrictMode, null, elem) : elem, appElement);\n  return renderPromise;\n}\nfunction Root({\n  callback,\n  children\n}) {\n  _s();\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react.default.useLayoutEffect(() => callback(), [callback]);\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    _react.default.useEffect(() => {\n      window.__NEXT_HYDRATED = true;\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB();\n      }\n    }, []);\n  }\n  return children;\n}\n_s(Root, \"Gjgl5rfcc2T4sFnfEMfRvL6K4Q4=\");\n_c2 = Root;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Root\");",
  "map": {
    "version": 3,
    "sources": [
      "../../client/index.tsx"
    ],
    "names": [
      "data",
      "JSON",
      "parse",
      "document",
      "getElementById",
      "textContent",
      "window",
      "__NEXT_DATA__",
      "version",
      "process",
      "__NEXT_VERSION",
      "props",
      "hydrateProps",
      "err",
      "hydrateErr",
      "buildId",
      "assetPrefix",
      "runtimeConfig",
      "dynamicIds",
      "head",
      "initialHeadData",
      "locales",
      "defaultLocale",
      "locale",
      "prefix",
      "__webpack_public_path__",
      "envConfig",
      "setConfig",
      "serverRuntimeConfig",
      "publicRuntimeConfig",
      "asPath",
      "env",
      "__NEXT_i18n_SUPPORT",
      "normalizeLocalePath",
      "require",
      "isFallback",
      "localePathResult",
      "detectedLocale",
      "substr",
      "length",
      "pageLoader",
      "PageLoader",
      "page",
      "register",
      "r",
      "f",
      "registerPage",
      "__NEXT_P",
      "map",
      "p",
      "setTimeout",
      "push",
      "headManager",
      "appElement",
      "lastAppProps",
      "lastRenderReject",
      "webpackHMR",
      "router",
      "CachedComponent",
      "cachedStyleSheets",
      "CachedApp",
      "onPerfEntry",
      "Container",
      "React",
      "Component",
      "componentDidCatch",
      "componentErr",
      "info",
      "fn",
      "componentDidMount",
      "scrollToHash",
      "isSsr",
      "nextExport",
      "pathname",
      "location",
      "search",
      "__N_SSG",
      "replace",
      "String",
      "querystring",
      "assign",
      "urlQueryToSearchParams",
      "query",
      "URLSearchParams",
      "_h",
      "shallow",
      "componentDidUpdate",
      "hash",
      "substring",
      "el",
      "scrollIntoView",
      "render",
      "children",
      "ReactDevOverlay",
      "emitter",
      "opts",
      "app",
      "mod",
      "loadPage",
      "reportWebVitals",
      "id",
      "name",
      "startTime",
      "value",
      "duration",
      "entryType",
      "entries",
      "uniqueID",
      "Date",
      "now",
      "Math",
      "floor",
      "random",
      "perfStartEntry",
      "label",
      "initialErr",
      "styleSheets",
      "isValidElementType",
      "Error",
      "error",
      "getNodeError",
      "message",
      "e",
      "stack",
      "node",
      "__NEXT_PRELOADREADY",
      "initialProps",
      "App",
      "initialStyleSheets",
      "wrapApp",
      "Boolean",
      "subscription",
      "__NEXT_PLUGINS",
      "then",
      "initClientModule",
      "default",
      "catch",
      "initClientErr",
      "console",
      "renderCtx",
      "renderingProps",
      "renderError",
      "doRender",
      "renderErr",
      "cancelled",
      "renderErrorProps",
      "onUnrecoverableError",
      "onClientErrorModule",
      "onClientErrorErr",
      "ErrorComponent",
      "AppTree",
      "appCtx",
      "ctx",
      "Promise",
      "resolve",
      "initProps",
      "isInitialRender",
      "ReactDOM",
      "hydrate",
      "reactRoot",
      "renderReactElement",
      "reactEl",
      "domEl",
      "__NEXT_REACT_MODE",
      "unstable_createRoot",
      "unstable_createBlockingRoot",
      "ST",
      "performance",
      "mark",
      "markHydrateComplete",
      "markRenderComplete",
      "measure",
      "getEntriesByName",
      "forEach",
      "clearMarks",
      "navStartEntries",
      "clearMeasures",
      "AppContainer",
      "wrappedAppProps",
      "appProps",
      "canceled",
      "resolvePromise",
      "renderPromise",
      "reject",
      "onStart",
      "currentStyleTags",
      "querySelectorAll",
      "currentHrefs",
      "Set",
      "tag",
      "getAttribute",
      "href",
      "text",
      "has",
      "styleTag",
      "createElement",
      "setAttribute",
      "appendChild",
      "createTextNode",
      "onCommit",
      "desiredHrefs",
      "s",
      "idx",
      "removeAttribute",
      "referenceNode",
      "querySelector",
      "targetTag",
      "parentNode",
      "insertBefore",
      "nextSibling",
      "removeChild",
      "getComputedStyle",
      "body",
      "elem",
      "__NEXT_STRICT_MODE",
      "Root",
      "callback",
      "useLayoutEffect",
      "__NEXT_TEST_MODE",
      "useEffect",
      "__NEXT_HYDRATED",
      "__NEXT_HYDRATED_CB"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/* global location */\nimport '@next/polyfill-module'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HeadManagerContext } from '../next-server/lib/head-manager-context'\nimport mitt from '../next-server/lib/mitt'\nimport { RouterContext } from '../next-server/lib/router-context'\nimport type Router from '../next-server/lib/router/router'\nimport type {\n  AppComponent,\n  AppProps,\n  PrivateRouteInfo,\n} from '../next-server/lib/router/router'\nimport {\n  delBasePath,\n  hasBasePath,\n  delLocale,\n} from '../next-server/lib/router/router'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\nimport * as envConfig from '../next-server/lib/runtime-config'\nimport type { NEXT_DATA } from '../next-server/lib/utils'\nimport { getURL, loadGetInitialProps, ST } from '../next-server/lib/utils'\nimport initHeadManager from './head-manager'\nimport PageLoader, { looseToArray, StyleSheetTuple } from './page-loader'\nimport measureWebVitals from './performance-relayer'\nimport { createRouter, makePublicRouterInstance } from './router'\n\n/// <reference types=\"react-dom/experimental\" />\n\ndeclare let __webpack_public_path__: string\n\ndeclare global {\n  interface Window {\n    /* test fns */\n    __NEXT_HYDRATED?: boolean\n    __NEXT_HYDRATED_CB?: () => void\n\n    /* prod */\n    __NEXT_PRELOADREADY?: (ids?: string[]) => void\n    __NEXT_DATA__: NEXT_DATA\n    __NEXT_P: any[]\n  }\n}\n\ntype RenderRouteInfo = PrivateRouteInfo & { App: AppComponent }\ntype RenderErrorProps = Omit<RenderRouteInfo, 'Component' | 'styleSheets'>\n\nconst data: typeof window['__NEXT_DATA__'] = JSON.parse(\n  document.getElementById('__NEXT_DATA__')!.textContent!\n)\nwindow.__NEXT_DATA__ = data\n\nexport const version = process.env.__NEXT_VERSION\n\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  head: initialHeadData,\n  locales,\n  defaultLocale,\n} = data\n\nlet { locale } = data\n\nconst prefix = assetPrefix || ''\n\n// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/` //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {},\n})\n\nlet asPath = getURL()\n\n// make sure not to attempt stripping basePath for 404s\nif (hasBasePath(asPath)) {\n  asPath = delBasePath(asPath)\n}\n\nasPath = delLocale(asPath, locale)\n\nif (process.env.__NEXT_i18n_SUPPORT) {\n  const {\n    normalizeLocalePath,\n  } = require('../next-server/lib/i18n/normalize-locale-path')\n\n  if (isFallback && locales) {\n    const localePathResult = normalizeLocalePath(asPath, locales)\n\n    if (localePathResult.detectedLocale) {\n      asPath = asPath.substr(localePathResult.detectedLocale.length + 1)\n      locale = localePathResult.detectedLocale\n    }\n  }\n}\n\ntype RegisterFn = (input: [string, () => void]) => void\n\nconst pageLoader = new PageLoader(buildId, prefix, page)\nconst register: RegisterFn = ([r, f]) => pageLoader.registerPage(r, f)\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map((p) => setTimeout(() => register(p), 0))\n}\nwindow.__NEXT_P = []\n;(window.__NEXT_P as any).push = register\n\nconst headManager = initHeadManager(initialHeadData)\nconst appElement = document.getElementById('__next')\n\nlet lastAppProps: AppProps\nlet lastRenderReject: (() => void) | null\nlet webpackHMR: any\nexport let router: Router\nlet CachedComponent: React.ComponentType\nlet cachedStyleSheets: StyleSheetTuple[]\nlet CachedApp: AppComponent, onPerfEntry: (metric: any) => void\n\nclass Container extends React.Component<{\n  fn: (err: Error, info?: any) => void\n}> {\n  componentDidCatch(componentErr: Error, info: any) {\n    this.props.fn(componentErr, info)\n  }\n\n  componentDidMount() {\n    this.scrollToHash()\n\n    // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (\n      router.isSsr &&\n      (isFallback ||\n        (data.nextExport &&\n          (isDynamicRoute(router.pathname) || location.search)) ||\n        (hydrateProps && hydrateProps.__N_SSG && location.search))\n    ) {\n      // update query on mount for exported pages\n      router.replace(\n        router.pathname +\n          '?' +\n          String(\n            querystring.assign(\n              querystring.urlQueryToSearchParams(router.query),\n              new URLSearchParams(location.search)\n            )\n          ),\n        asPath,\n        {\n          // @ts-ignore\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback,\n        }\n      )\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash()\n  }\n\n  scrollToHash() {\n    let { hash } = location\n    hash = hash && hash.substring(1)\n    if (!hash) return\n\n    const el = document.getElementById(hash)\n    if (!el) return\n\n    // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0)\n  }\n\n  render() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.props.children\n    } else {\n      const { ReactDevOverlay } = require('@next/react-dev-overlay/lib/client')\n      return <ReactDevOverlay>{this.props.children}</ReactDevOverlay>\n    }\n  }\n}\n\nexport const emitter = mitt()\n\nexport default async (opts: { webpackHMR?: any } = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (process.env.NODE_ENV === 'development') {\n    webpackHMR = opts.webpackHMR\n  }\n  const { page: app, mod } = await pageLoader.loadPage('/_app')\n  CachedApp = app as AppComponent\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries,\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${\n        Math.floor(Math.random() * (9e12 - 1)) + 1e12\n      }`\n      let perfStartEntry\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label:\n          entryType === 'mark' || entryType === 'measure'\n            ? 'custom'\n            : 'web-vital',\n      })\n    }\n  }\n\n  let initialErr = hydrateErr\n\n  try {\n    ;({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets,\n    } = await pageLoader.loadPage(page))\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { isValidElementType } = require('react-is')\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(\n          `The default export is not a React Component in page: \"${page}\"`\n        )\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { getNodeError } = require('@next/react-dev-overlay/lib/client')\n    // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr!.message)\n          } catch (e) {\n            error = e\n          }\n\n          error.name = initialErr!.name\n          error.stack = initialErr!.stack\n\n          const node = getNodeError(error)\n          throw node\n        })\n      }\n      // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr\n        })\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds)\n  }\n\n  router = createRouter(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: ({ Component, styleSheets, props, err }, App) =>\n      render({ App, Component, styleSheets, props, err }),\n    locale,\n    locales,\n    defaultLocale,\n  })\n\n  // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-init-client!')\n      .then((initClientModule) => {\n        return initClientModule.default({ router })\n      })\n      .catch((initClientErr) => {\n        console.error('Error calling client-init for plugins', initClientErr)\n      })\n  }\n\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr,\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    render(renderCtx)\n    return emitter\n  } else {\n    return { emitter, render, renderCtx }\n  }\n}\n\nexport async function render(renderingProps: RenderRouteInfo) {\n  if (renderingProps.err) {\n    await renderError(renderingProps)\n    return\n  }\n\n  try {\n    await doRender(renderingProps)\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr\n      })\n    }\n    await renderError({ ...renderingProps, err: renderErr })\n  }\n}\n\n// This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nexport function renderError(renderErrorProps: RenderErrorProps) {\n  const { App, err } = renderErrorProps\n\n  // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (process.env.NODE_ENV !== 'production') {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError()\n\n    // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: [],\n    })\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-error-client!')\n      .then((onClientErrorModule) => {\n        return onClientErrorModule.default({ err })\n      })\n      .catch((onClientErrorErr) => {\n        console.error(\n          'error calling on-error-client for plugins',\n          onClientErrorErr\n        )\n      })\n  }\n\n  // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err)\n  return pageLoader\n    .loadPage('/_error')\n    .then(({ page: ErrorComponent, styleSheets }) => {\n      // In production we do a normal render with the `ErrorComponent` as component.\n      // If we've gotten here upon initial render, we can use the props from the server.\n      // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n      const AppTree = wrapApp(App)\n      const appCtx = {\n        Component: ErrorComponent,\n        AppTree,\n        router,\n        ctx: { err, pathname: page, query, asPath, AppTree },\n      }\n      return Promise.resolve(\n        renderErrorProps.props\n          ? renderErrorProps.props\n          : loadGetInitialProps(App, appCtx)\n      ).then((initProps) =>\n        doRender({\n          ...renderErrorProps,\n          err,\n          Component: ErrorComponent,\n          styleSheets,\n          props: initProps,\n        })\n      )\n    })\n}\n\n// If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof ReactDOM.hydrate === 'function'\nlet reactRoot: any = null\nfunction renderReactElement(reactEl: JSX.Element, domEl: HTMLElement) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = { hydrate: true }\n      reactRoot =\n        process.env.__NEXT_REACT_MODE === 'concurrent'\n          ? (ReactDOM as any).unstable_createRoot(domEl, opts)\n          : (ReactDOM as any).unstable_createBlockingRoot(domEl, opts)\n    }\n    reactRoot.render(reactEl)\n  } else {\n    // mark start of hydrate/render\n    if (ST) {\n      performance.mark('beforeRender')\n    }\n\n    // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      ReactDOM.hydrate(reactEl, domEl, markHydrateComplete)\n      isInitialRender = false\n\n      if (onPerfEntry && ST) {\n        measureWebVitals(onPerfEntry)\n      }\n    } else {\n      ReactDOM.render(reactEl, domEl, markRenderComplete)\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!ST) return\n\n  performance.mark('afterHydrate') // mark end of hydration\n\n  performance.measure(\n    'Next.js-before-hydration',\n    'navigationStart',\n    'beforeRender'\n  )\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate')\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry)\n  }\n  clearMarks()\n}\n\nfunction markRenderComplete() {\n  if (!ST) return\n\n  performance.mark('afterRender') // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark')\n\n  if (!navStartEntries.length) {\n    return\n  }\n\n  performance.measure(\n    'Next.js-route-change-to-render',\n    navStartEntries[0].name,\n    'beforeRender'\n  )\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender')\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry)\n    performance\n      .getEntriesByName('Next.js-route-change-to-render')\n      .forEach(onPerfEntry)\n  }\n  clearMarks()\n  ;['Next.js-route-change-to-render', 'Next.js-render'].forEach((measure) =>\n    performance.clearMeasures(measure)\n  )\n}\n\nfunction clearMarks() {\n  ;[\n    'beforeRender',\n    'afterHydrate',\n    'afterRender',\n    'routeChange',\n  ].forEach((mark) => performance.clearMarks(mark))\n}\n\nfunction AppContainer({\n  children,\n}: React.PropsWithChildren<{}>): React.ReactElement {\n  return (\n    <Container\n      fn={(error) =>\n        renderError({ App: CachedApp, err: error }).catch((err) =>\n          console.error('Error rendering page: ', err)\n        )\n      }\n    >\n      <RouterContext.Provider value={makePublicRouterInstance(router)}>\n        <HeadManagerContext.Provider value={headManager}>\n          {children}\n        </HeadManagerContext.Provider>\n      </RouterContext.Provider>\n    </Container>\n  )\n}\n\nconst wrapApp = (App: AppComponent) => (\n  wrappedAppProps: Record<string, any>\n) => {\n  const appProps: AppProps = {\n    ...wrappedAppProps,\n    Component: CachedComponent,\n    err: hydrateErr,\n    router,\n  }\n  return (\n    <AppContainer>\n      <App {...appProps} />\n    </AppContainer>\n  )\n}\n\nfunction doRender({\n  App,\n  Component,\n  props,\n  err,\n  styleSheets,\n}: RenderRouteInfo): Promise<any> {\n  Component = Component || lastAppProps.Component\n  props = props || lastAppProps.props\n\n  const appProps: AppProps = {\n    ...props,\n    Component,\n    err,\n    router,\n  }\n  // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps\n\n  let canceled = false\n  let resolvePromise: () => void\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject()\n    }\n    resolvePromise = () => {\n      lastRenderReject = null\n      resolve()\n    }\n    lastRenderReject = () => {\n      canceled = true\n      lastRenderReject = null\n\n      const error: any = new Error('Cancel rendering route')\n      error.cancelled = true\n      reject(error)\n    }\n  })\n\n  // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart(): boolean {\n    if (\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles.\n      isInitialRender ||\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV !== 'production'\n    ) {\n      return false\n    }\n\n    const currentStyleTags = looseToArray<HTMLStyleElement>(\n      document.querySelectorAll('style[data-n-href]')\n    )\n    const currentHrefs = new Set(\n      currentStyleTags.map((tag) => tag.getAttribute('data-n-href'))\n    )\n\n    styleSheets.forEach(({ href, text }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style')\n        styleTag.setAttribute('data-n-href', href)\n        styleTag.setAttribute('media', 'x')\n\n        document.head.appendChild(styleTag)\n        styleTag.appendChild(document.createTextNode(text))\n      }\n    })\n    return true\n  }\n\n  function onCommit() {\n    if (\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV === 'production' &&\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles:\n      !isInitialRender &&\n      // Ensure this render was not canceled\n      !canceled\n    ) {\n      const desiredHrefs = new Set(styleSheets.map((s) => s.href))\n      const currentStyleTags = looseToArray<HTMLStyleElement>(\n        document.querySelectorAll('style[data-n-href]')\n      )\n      const currentHrefs = currentStyleTags.map(\n        (tag) => tag.getAttribute('data-n-href')!\n      )\n\n      // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media')\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x')\n        }\n      }\n\n      // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]')\n      if (\n        // This should be an invariant:\n        referenceNode\n      ) {\n        styleSheets.forEach(({ href }) => {\n          const targetTag = document.querySelector(\n            `style[data-n-href=\"${href}\"]`\n          )\n          if (\n            // This should be an invariant:\n            targetTag\n          ) {\n            referenceNode!.parentNode!.insertBefore(\n              targetTag,\n              referenceNode!.nextSibling\n            )\n            referenceNode = targetTag\n          }\n        })\n      }\n\n      // Finally, clean up server rendered stylesheets:\n      looseToArray<HTMLLinkElement>(\n        document.querySelectorAll('link[data-n-p]')\n      ).forEach((el) => {\n        el.parentNode!.removeChild(el)\n      })\n\n      // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height')\n    }\n\n    resolvePromise()\n  }\n\n  const elem = (\n    <Root callback={onCommit}>\n      <AppContainer>\n        <App {...appProps} />\n      </AppContainer>\n    </Root>\n  )\n\n  onStart()\n\n  // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(\n    process.env.__NEXT_STRICT_MODE ? (\n      <React.StrictMode>{elem}</React.StrictMode>\n    ) : (\n      elem\n    ),\n    appElement!\n  )\n\n  return renderPromise\n}\n\nfunction Root({\n  callback,\n  children,\n}: React.PropsWithChildren<{\n  callback: () => void\n}>): React.ReactElement {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      window.__NEXT_HYDRATED = true\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB()\n      }\n    }, [])\n  }\n  return children as React.ReactElement\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
