{
  "ast": null,
  "code": "var __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\"; // Import EmailJS SDK\nimport { Fade } from \"react-reveal\"; // Optional: add fade-in effect\nimport \"./ContactForm.css\"; // Import CSS for the form styling\n\nfunction ContactForm({\n  theme\n}) {\n  const {\n    0: userInput,\n    1: setUserInput\n  } = useState({\n    title: \"\",\n    sender_name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"\");\n\n  // Handle input change\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInput(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation (make sure all fields are filled)\n    if (!userInput.title || !userInput.sender_name || !userInput.email || !userInput.message) {\n      setStatus(\"Please fill in all fields\");\n      return;\n    }\n\n    // Set loading state\n    setIsLoading(true);\n\n    // Call EmailJS to send the email\n    sendEmail(userInput);\n  };\n\n  // Send email using EmailJS\n  const sendEmail = data => {\n    emailjs.send(\"service_3v98hqc\",\n    // Replace with your EmailJS service ID\n    \"template_b7erwfl\",\n    // Replace with your EmailJS template ID\n    {\n      title: data.title,\n      sender_name: data.sender_name,\n      email: data.email,\n      message: data.message\n    }, \"OQqXboegOJYkVb4aK\" // Replace with your EmailJS user ID\n    ).then(response => {\n      console.log(\"SUCCESS!\", response);\n      setStatus(\"Message sent successfully! Thank you for reaching out.\");\n      setIsLoading(false);\n      setUserInput({\n        title: \"\",\n        sender_name: \"\",\n        email: \"\",\n        message: \"\"\n      });\n    }, error => {\n      console.log(\"FAILED...\", error);\n      setStatus(\"Something went wrong. Please try again.\");\n      setIsLoading(false);\n    });\n  };\n  return __jsx(\"div\", {\n    className: \"contact-form-main\"\n  }, __jsx(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"40px\"\n  }, __jsx(\"div\", {\n    className: \"contact-form\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"contact-form\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-label\"\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: userInput.title,\n    onChange: handleInputChange,\n    required: true,\n    className: \"form-input\",\n    style: {\n      backgroundColor: theme.background,\n      color: theme.text\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-label\"\n  }, \"Your Name:\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"sender_name\",\n    value: userInput.sender_name,\n    onChange: handleInputChange,\n    required: true,\n    className: \"form-input\",\n    style: {\n      backgroundColor: theme.background,\n      color: theme.text\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-label\"\n  }, \"Your Email:\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: userInput.email,\n    onChange: handleInputChange,\n    required: true,\n    className: \"form-input\",\n    style: {\n      backgroundColor: theme.background,\n      color: theme.text\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-label\"\n  }, \"Your Message:\"), __jsx(\"textarea\", {\n    name: \"message\",\n    value: userInput.message,\n    onChange: handleInputChange,\n    required: true,\n    className: \"form-textarea\",\n    style: {\n      backgroundColor: theme.background,\n      color: theme.text\n    }\n  })), status && __jsx(\"p\", {\n    className: \"form-status\"\n  }, status), __jsx(\"div\", {\n    className: \"form-group\"\n  }, isLoading ? __jsx(\"p\", null, \"Sending...\") : __jsx(\"div\", {\n    class: \"project-button\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"form-submit-btn\",\n    style: {\n      color: theme.body,\n      backgroundColor: theme.text,\n      border: `solid 1px ${theme.text}`\n    }\n  }, \"Send Message\")))))));\n}\nexport default ContactForm;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
