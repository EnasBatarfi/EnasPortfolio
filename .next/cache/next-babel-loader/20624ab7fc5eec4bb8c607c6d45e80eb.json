{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { greeting, seo, socialMediaLinks, experience, contactPageData, certifications } from \"../../portfolio.js\";\nfunction SeoHeader() {\n  var _experience$sections, _experience$sections$, _experience$sections$2, _seo$og, _contactPageData$phon, _contactPageData$addr, _contactPageData$addr2, _contactPageData$addr3, _contactPageData$addr4, _contactPageData$addr5, _seo$og2, _seo$og3, _seo$og4;\n  let sameAs = [];\n  socialMediaLinks.filter(media => !(media.link.startsWith(\"tel\") || media.link.startsWith(\"mailto\"))).forEach(media => {\n    sameAs.push(media.link);\n  });\n  let mail = socialMediaLinks.find(media => media.link.startsWith(\"mailto\")).link.substring(\"mailto:\".length);\n  let job = (_experience$sections = experience.sections) === null || _experience$sections === void 0 ? void 0 : (_experience$sections$ = _experience$sections.find(section => section.work)) === null || _experience$sections$ === void 0 ? void 0 : (_experience$sections$2 = _experience$sections$.experiences) === null || _experience$sections$2 === void 0 ? void 0 : _experience$sections$2.at(0);\n  let credentials = [];\n  certifications.certifications.forEach(certification => {\n    credentials.push({\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"EducationalOccupationalCredential\",\n      url: certification.certificate_link,\n      name: certification.title,\n      description: certification.subtitle\n    });\n  });\n  const data = {\n    \"@context\": \"https://schema.org/\",\n    \"@type\": \"Person\",\n    name: greeting.title,\n    url: seo === null || seo === void 0 ? void 0 : (_seo$og = seo.og) === null || _seo$og === void 0 ? void 0 : _seo$og.url,\n    email: mail,\n    telephone: (_contactPageData$phon = contactPageData.phoneSection) === null || _contactPageData$phon === void 0 ? void 0 : _contactPageData$phon.subtitle,\n    sameAs: sameAs,\n    jobTitle: job.title,\n    worksFor: {\n      \"@type\": \"Organization\",\n      name: job.company\n    },\n    address: {\n      \"@type\": \"PostalAddress\",\n      addressLocality: (_contactPageData$addr = contactPageData.addressSection) === null || _contactPageData$addr === void 0 ? void 0 : _contactPageData$addr.locality,\n      addressRegion: (_contactPageData$addr2 = contactPageData.addressSection) === null || _contactPageData$addr2 === void 0 ? void 0 : _contactPageData$addr2.region,\n      addressCountry: (_contactPageData$addr3 = contactPageData.addressSection) === null || _contactPageData$addr3 === void 0 ? void 0 : _contactPageData$addr3.country,\n      postalCode: (_contactPageData$addr4 = contactPageData.addressSection) === null || _contactPageData$addr4 === void 0 ? void 0 : _contactPageData$addr4.postalCode,\n      streetAddress: (_contactPageData$addr5 = contactPageData.addressSection) === null || _contactPageData$addr5 === void 0 ? void 0 : _contactPageData$addr5.streetAddress\n    },\n    hasCredential: credentials\n  };\n  return __jsx(Helmet, null, __jsx(\"title\", null, seo.title), __jsx(\"meta\", {\n    name: \"description\",\n    content: seo.description\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: seo === null || seo === void 0 ? void 0 : (_seo$og2 = seo.og) === null || _seo$og2 === void 0 ? void 0 : _seo$og2.title\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: seo === null || seo === void 0 ? void 0 : (_seo$og3 = seo.og) === null || _seo$og3 === void 0 ? void 0 : _seo$og3.type\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: seo === null || seo === void 0 ? void 0 : (_seo$og4 = seo.og) === null || _seo$og4 === void 0 ? void 0 : _seo$og4.url\n  }), __jsx(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(data)));\n}\nexport default SeoHeader;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
